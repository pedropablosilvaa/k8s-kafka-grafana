services:
  # Kafka service
  broker:
    image: apache/kafka:latest
    container_name: broker
    networks:
      - influxdb_network
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092" # External port for Kafka


  # Your Python application (built from Dockerfile)
  myapp:
    build: .  # Build the image using the Dockerfile in the current directory
    container_name: myapp-container
    networks:
      - influxdb_network
    depends_on:
      - broker  # Ensure Kafka is started first
    environment:
      - KAFKA_SERVER=broker:9092  # Kafka address (Kafka service defined above)

    ports:
      - "5000:5000"  # Expose app port (if necessary).

  influxdb2:
    image: influxdb:2
    container_name: influxdb2
    ports:
      - 8086:8086
    networks:
      - influxdb_network
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: weather_db
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    networks:
      - influxdb_network
    depends_on:
      - broker
      - influxdb2
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro  # Add :ro to make it read-only (optional)
    environment:
      INFLUXDB_URL: http://influxdb2:8086  # Use the correct service name
      INFLUXDB_DB: weather_db
      INFLUX_TOKEN: /run/secrets/influxdb2-admin-token
    secrets:
      - influxdb2-admin-token


  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=http://my.grafana.server/
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - '3000:3000'
    networks:
      - influxdb_network
    volumes:
      - ./grafana-provisioning/:/etc/grafana/provisioning


secrets:
  influxdb2-admin-username:
    file: ~/.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: ~/.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: ~/.env.influxdb2-admin-token
volumes:
  influxdb2-data:
  influxdb2-config:
networks:
    influxdb_network:
        name: influxdb_network
        external: true